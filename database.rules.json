{
  "rules": {
    // Usuarios - Permitir lectura a todos los usuarios autenticados (necesario para asignaciones)
    // pero escritura solo a administradores y el propio usuario
    "users": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      "$uid": {
        ".read": "auth != null && (auth.uid == $uid || auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
        ".write": "auth != null && (auth.uid == $uid || auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
        ".validate": "newData.hasChildren(['name', 'role']) && (newData.hasChild('email') || newData.child('isGhost').val() == true)"
      }
    },
    
    // Usuarios fantasma - Solo administradores pueden gestionar
    "ghostUsers": {
      ".read": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      "$ghostId": {
        ".validate": "newData.hasChildren(['name', 'role', 'isGhost', 'status', 'createdAt']) && newData.child('isGhost').val() == true && newData.child('status').val() == 'ghost' && newData.child('canLogin').val() == false"
      }
    },
    
    // Mangas - Solo usuarios con roles específicos pueden gestionar
    "mangas": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor')",
      "$mangaId": {
        ".read": "auth != null",
        ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor')",
        ".validate": "newData.hasChildren(['title', 'author', 'status', 'createdAt']) || !newData.exists()"
      }
    },
    
    // Capítulos independientes - Solo usuarios con roles específicos pueden gestionar
    "chapters": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor')",
      "$mangaId": {
        ".read": "auth != null",
        ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor')",
        "$chapterNumber": {
          ".read": "auth != null",
          ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor')",
          ".validate": "newData.hasChildren(['chapter', 'status']) || !newData.exists()"
        }
      }
    },
    
    // Asignaciones - Permisos basados en roles y propiedad
    "assignments": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor' || root.child('users').child(auth.uid).child('role').val() == 'uploader')",
      "$assignmentId": {
        // Los usuarios asignados pueden actualizar su progreso
        ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor' || root.child('users').child(auth.uid).child('role').val() == 'uploader' || data.child('assignedTo').val() == auth.uid)",
        ".validate": "newData.hasChildren(['mangaId', 'mangaTitle', 'chapter', 'type', 'status', 'createdAt']) || !newData.exists()",
        
        // Reglas específicas para campos
        "progress": {
          ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor' || root.child('users').child(auth.uid).child('role').val() == 'uploader' || data.child('assignedTo').val() == auth.uid)",
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 100"
        },
        
        "status": {
          ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor' || root.child('users').child(auth.uid).child('role').val() == 'uploader' || data.child('assignedTo').val() == auth.uid)",
          ".validate": "newData.isString() && (newData.val() == 'pendiente' || newData.val() == 'en_progreso' || newData.val() == 'completado' || newData.val() == 'cancelado' || newData.val() == 'sin_asignar' || newData.val() == 'uploaded' || newData.val() == 'pendiente_aprobacion' || newData.val() == 'aprobado')"
        },
        
        // Campos adicionales para el flujo de aprobación
        "completedDate": {
          ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor' || data.child('assignedTo').val() == auth.uid)",
          ".validate": "newData.isString()"
        },
        
        "completedBy": {
          ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor' || data.child('assignedTo').val() == auth.uid)",
          ".validate": "newData.isString()"
        },
        
        "pendingApprovalSince": {
          ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor' || data.child('assignedTo').val() == auth.uid)",
          ".validate": "newData.isString()"
        },
        
        "reviewRequiredBy": {
          ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'jefe_editor' || root.child('users').child(auth.uid).child('role').val() == 'jefe_traductor' || data.child('assignedTo').val() == auth.uid)",
          ".validate": "newData.isString()"
        }
      }
    },
    
    // Asignaciones compartidas - Acceso público para lectura y actualización de progreso
    "sharedAssignments": {
      ".read": true,
      "$shareId": {
        ".read": true,
        ".write": true,
        ".validate": "newData.hasChildren(['assignmentId', 'createdAt'])",
        
        // Permitir actualización de progreso sin autenticación
        "progress": {
          ".write": true,
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 100"
        },
        
        "status": {
          ".write": true,
          ".validate": "newData.isString() && (newData.val() == 'pendiente' || newData.val() == 'en_progreso' || newData.val() == 'completado' || newData.val() == 'cancelado' || newData.val() == 'sin_asignar' || newData.val() == 'uploaded' || newData.val() == 'pendiente_aprobacion' || newData.val() == 'aprobado')"
        },
        
        "updatedAt": {
          ".write": true
        },
        
        "lastUpdatedBy": {
          ".write": true
        }
      }
    },
    
    // Estadísticas - Solo lectura para usuarios autenticados
    "stats": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')"
    },
    
    // Progreso de Upload - Los usuarios pueden guardar su progreso
    "uploadProgress": {
      ".read": "auth != null",
      "$userId": {
        ".read": "auth != null && (auth.uid == $userId || auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
        ".write": "auth != null && (auth.uid == $userId || auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
        ".validate": "newData.hasChildren(['selectedChapters', 'currentChapterIndex', 'layoutProgress', 'workflow', 'lastSaved'])"
      }
    },
    
    // Reportes de Upload - Uploaders pueden leer la colección pero solo acceder a sus reportes
    "uploadReports": {
      ".read": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'uploader')",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || root.child('users').child(auth.uid).child('role').val() == 'uploader')",
      "$reportId": {
        ".read": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador' || data.child('uploaderId').val() == auth.uid)",
        ".validate": "newData.hasChildren(['uploaderId', 'uploaderName', 'chapters', 'uploadDate', 'totalChapters'])"
      }
    },
    
    // Configuración del sistema - Solo administradores
    "config": {
      ".read": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')"
    },
    
    // Estado público del modo mantenimiento - Todos los usuarios autenticados pueden leer
    "maintenanceStatus": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      "isActive": {
        ".validate": "newData.isBoolean()"
      },
      "lastUpdated": {
        ".validate": "newData.isString()"
      }
    },
    
    // Información pública del sistema - Todos los usuarios autenticados pueden leer
    "publicSystemInfo": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      "systemName": {
        ".validate": "newData.isString() && newData.val().length >= 3"
      },
      "systemVersion": {
        ".validate": "newData.isString() && newData.val().length >= 1"
      },
      "lastUpdated": {
        ".validate": "newData.isString()"
      }
    },
    
    // Configuraciones del sistema (nuevo sistema) - Solo administradores
    "systemConfig": {
      ".read": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      
      // Sección General
      "general": {
        ".validate": "newData.hasChildren(['systemName', 'systemVersion', 'baseUrl', 'lastUpdated']) || !newData.exists()",
        "systemName": {
          ".validate": "newData.isString() && newData.val().length >= 3"
        },
        "maxFileSize": {
          ".validate": "newData.isNumber() && newData.val() >= 1 && newData.val() <= 500"
        },
        "supportEmail": {
          ".validate": "newData.isString()"
        },
        "maintenanceMode": {
          ".validate": "newData.isBoolean()"
        },
        "registrationEnabled": {
          ".validate": "newData.isBoolean()"
        }
      },
      
      // Sección Firebase
      "firebase": {
        ".validate": "newData.hasChildren(['workerUrl', 'enableRealtimeSync', 'lastUpdated']) || !newData.exists()",
        "workerUrl": {
          ".validate": "newData.isString()"
        },
        "enableRealtimeSync": {
          ".validate": "newData.isBoolean()"
        },
        "backupFrequency": {
          ".validate": "newData.isString() && (newData.val() == 'hourly' || newData.val() == 'daily' || newData.val() == 'weekly' || newData.val() == 'monthly')"
        }
      },
      
      // Sección APIs
      "apis": {
        ".validate": "newData.hasChildren(['imagekitEnabled', 'googleDriveEnabled', 'lastUpdated']) || !newData.exists()",
        "imagekitEnabled": {
          ".validate": "newData.isBoolean()"
        },
        "googleDriveEnabled": {
          ".validate": "newData.isBoolean()"
        },
        "cloudflareWorkerEnabled": {
          ".validate": "newData.isBoolean()"
        },
        "notificationEmail": {
          ".validate": "newData.isString()"
        }
      },
      
      // Sección Seguridad
      "security": {
        ".validate": "newData.hasChildren(['sessionTimeout', 'passwordMinLength', 'lastUpdated']) || !newData.exists()",
        "sessionTimeout": {
          ".validate": "newData.isNumber() && newData.val() >= 1 && newData.val() <= 168"
        },
        "passwordMinLength": {
          ".validate": "newData.isNumber() && newData.val() >= 6 && newData.val() <= 50"
        },
        "maxLoginAttempts": {
          ".validate": "newData.isNumber() && newData.val() >= 3 && newData.val() <= 20"
        },
        "lockoutDuration": {
          ".validate": "newData.isNumber() && newData.val() >= 1 && newData.val() <= 1440"
        },
        "requireUppercase": {
          ".validate": "newData.isBoolean()"
        },
        "requireNumbers": {
          ".validate": "newData.isBoolean()"
        },
        "requireSpecialChars": {
          ".validate": "newData.isBoolean()"
        },
        "enableTwoFactor": {
          ".validate": "newData.isBoolean()"
        }
      },
      
      // Metadata del sistema
      "metadata": {
        ".validate": "newData.hasChildren(['version', 'lastUpdated']) || !newData.exists()",
        "version": {
          ".validate": "newData.isString()"
        },
        "lastUpdated": {
          ".validate": "newData.isString()"
        },
        "backupCount": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        }
      }
    },
    
    // Permisos personalizados de usuarios - Solo administradores pueden escribir
    "userPermissions": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      "$userId": {
        ".read": "auth != null",
        ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
        ".validate": "newData.hasChildren(['_lastUpdated', '_updatedBy']) || !newData.exists()",
        "_lastUpdated": {
          ".validate": "newData.isString()"
        },
        "_updatedBy": {
          ".validate": "newData.isString()"
        },
        // Permisos específicos - todos opcionales y booleanos
        "canAssignChapters": {
          ".validate": "newData.isBoolean()"
        },
        "canEditAssignments": {
          ".validate": "newData.isBoolean()"
        },
        "canDeleteAssignments": {
          ".validate": "newData.isBoolean()"
        },
        "canReassignTasks": {
          ".validate": "newData.isBoolean()"
        },
        "canViewAllProjects": {
          ".validate": "newData.isBoolean()"
        },
        "canAccessReports": {
          ".validate": "newData.isBoolean()"
        },
        "canViewUserStats": {
          ".validate": "newData.isBoolean()"
        },
        "canManageUploads": {
          ".validate": "newData.isBoolean()"
        },
        "canManageSeries": {
          ".validate": "newData.isBoolean()"
        },
        "canModerateReviews": {
          ".validate": "newData.isBoolean()"
        },
        "canViewSystemLogs": {
          ".validate": "newData.isBoolean()"
        },
        "canManageBackups": {
          ".validate": "newData.isBoolean()"
        }
      }
    },
    
    // Logs del sistema - Solo administradores pueden acceder
    "systemLogs": {
      ".read": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      "permissions": {
        ".read": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
        ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
        "$logId": {
          ".validate": "newData.hasChildren(['userId', 'action', 'changedBy', 'timestamp', 'type']) || !newData.exists()",
          "userId": {
            ".validate": "newData.isString()"
          },
          "action": {
            ".validate": "newData.isString() && (newData.val() == 'update' || newData.val() == 'delete')"
          },
          "changedBy": {
            ".validate": "newData.isString()"
          },
          "timestamp": {
            ".validate": "newData.isString()"
          },
          "type": {
            ".validate": "newData.isString() && newData.val() == 'permission_change'"
          },
          "permissions": {
            ".validate": "newData.exists() || !newData.exists()"
          }
        }
      }
    },
    
    // Backups de configuraciones del sistema - Solo administradores
    "systemConfigBackups": {
      ".read": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      ".write": "auth != null && (auth.uid == '7HIHfawVZtYBnUgIsvuspXY9DCw1' || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'administrador')",
      "$backupId": {
        ".validate": "newData.hasChildren(['backupMetadata']) || !newData.exists()",
        "backupMetadata": {
          ".validate": "newData.hasChildren(['backupId', 'createdAt'])",
          "backupId": {
            ".validate": "newData.isString()"
          },
          "createdAt": {
            ".validate": "newData.isString()"
          },
          "createdBy": {
            ".validate": "newData.isString()"
          }
        }
      }
    }
  }
}
